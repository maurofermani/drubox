#!/home/usuario/.rvm/rubies/ruby-1.9.3-p327/bin/ruby


output = 0
begin

  $stdout.reopen("/tmp/out.txt", "a")
  $stderr.reopen("/tmp/err.txt", "a")
  
  require "/home/usuario/workspace/rubox/config/environment"

  pathLog = Dir.pwd + "/log"
  Dir.mkdir(pathLog) if (!File.exists?(pathLog))
  logFile = File.open(pathLog+"/out.log", "a")


  logFile.puts "-------------------------------------------------\n"
  logFile.puts "[" + Time.new.to_s + "] \n"
  refname=ARGV[0]
  oldrev=ARGV[1]
  newrev=ARGV[2]
  
  #autor del commit y el mensaje del commit entrante
  gitLog = `git show --pretty="Autor: %an%nCommit: %s" #{newrev} | sed -n 1,2p`
  #lo escribo en el log
  logFile.puts gitLog.to_s
  #obtengo el login. Formato: [<login>] <name>
  split = gitLog.split("\n")
  split[0]["Autor: "] = ""
  split[1]["Commit: "] = ""
  login = split[0]
  #Obtengo el usuario de la base de datos
  user = User.where("login='" + login + "'").first

  path = Dir.pwd
  pName = File.basename(path,".git")
  project = Project.where("name = '" + pName.to_s + "'").first

  if (user == nil || project == nil)
    logFile.puts "Error de validacion de usuario y proyecto"
    output = 1
  else 
    pers = Permission.where("user_id = " + user.id.to_s + " and project_id = " + project.id.to_s).first
    if (pers == nil || pers.type.description == "read") 
      logFile.puts "Error. El usuario no tiene permisos"
      output = 1
    else 
      logFile.puts "Cambios aceptados"
    end
  end

rescue Exception => e
  output = 1
  logFile.puts (e.message)
ensure
  logFile.flush
  logFile.close
end


exit(output)
